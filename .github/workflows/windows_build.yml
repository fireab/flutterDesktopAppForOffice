# name: Full Flutter Windows CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main # Trigger on pushes to the main branch
#   pull_request:
#     branches:
#       - main # Trigger on pull requests targeting the main branch
#   workflow_dispatch: # Allows you to manually trigger the workflow from GitHub UI

# jobs:
#   build-and-test-windows:
#     # This job runs on a Windows virtual machine, which is necessary for building Windows executables.
#     runs-on: windows-latest

#     steps:
#       - name: Checkout code
#         # Uses the official GitHub action to check out your repository's code.
#         uses: actions/checkout@v4

#       - name: Set up Flutter SDK
#         # Uses a community action to set up the Flutter environment.
#         # You can specify the Flutter version you want to use.
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: "3.x" # Use a specific Flutter version, e.g., '3.19.x' or '3.22.x'
#           channel: "stable" # Or 'beta', 'master' if needed

#       - name: Enable Windows desktop support
#         # Flutter requires enabling desktop support before building for Windows.
#         run: flutter config --enable-windows-desktop

#       - name: Get Flutter dependencies
#         # Fetches all the required packages for your Flutter project.
#         run: flutter pub get

#       # - name: Analyze Flutter code
#       #   # Runs static analysis on your Flutter project to catch potential issues and enforce best practices.
#       #   # This step will fail the workflow if there are any analysis errors or warnings (depending on your analysis_options.yaml).
#       #   run: flutter analyze

#       # - name: Run Flutter tests
#       #   # Executes all unit and widget tests defined in your Flutter project.
#       #   # This step will fail the workflow if any tests fail.
#       #   run: flutter test

#       - name: Build Windows release executable
#         # Builds the Flutter application for Windows in release mode.
#         # The output will be in build/windows/x64/runner/Release/
#         run: flutter build windows --release

#       - name: Upload Windows executable as artifact
#         # Uploads the generated build files as a workflow artifact.
#         # This allows you to download the .exe and its dependencies after the workflow completes.
#         uses: actions/upload-artifact@v4
#         with:
#           name: windows-app-release
#           path: build/windows/x64/runner/Release/ # Path to the built application files
#           retention-days: 7 # How long to retain the artifact (optional)

# name: Full Flutter Windows CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build-and-test-windows:
#     runs-on: windows-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Flutter SDK
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: "3.x"
#           channel: "stable"

#       - name: Enable Windows desktop support
#         run: flutter config --enable-windows-desktop

#       - name: Get Flutter dependencies
#         run: flutter pub get

#       - name: Build Windows release executable
#         run: flutter build windows --release

#       - name: Build MSIX setup installer (unsigned)
#         run: flutter pub run msix:create

#       - name: Upload Windows executable as artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: windows-app-release
#           path: build/windows/x64/runner/Release/
#           retention-days: 7

#       - name: Upload MSIX setup installer
#         uses: actions/upload-artifact@v4
#         with:
#           name: windows-setup-installer
#           path: build/windows/runner/Release/*.msix
#           retention-days: 7

name: Build Flutter Windows App + Installer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: stable

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows release executable
        run: flutter build windows --release

      - name: Install Inno Setup
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "is.exe"
          Start-Process -FilePath "is.exe" -ArgumentList "/verysilent", "/sp-", "/suppressmsgboxes" -Wait
        shell: powershell

      - name: Build installer with Inno Setup
        run: '"C:\Program Files (x86)\Inno Setup 6\ISCC.exe" nifas_silk.iss'
        shell: powershell

      - name: Upload Flutter Windows release executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-windows-release
          path: build/windows/x64/runner/Release/

      - name: Upload Inno Setup installer as artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-windows-installer
          path: path\to\output\installer.exe
